unit UFrmCadProd;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, Vcl.ExtCtrls, Vcl.DBCtrls,
  Data.DB, Data.Win.ADODB, Vcl.Mask;

type
  TFrmCadProd = class(TForm)
    Label1: TLabel;
    Label2: TLabel;
    Label3: TLabel;
    Label4: TLabel;
    Label5: TLabel;
    Label6: TLabel;
    lblCad: TLabel;
    BtnGravar: TButton;
    EdtCod: TEdit;
    Label8: TLabel;
    EdtDesc: TEdit;
    DBLkCmbCateg: TDBLookupComboBox;
    EdtFabr: TEdit;
    EdtQtde: TEdit;
    EdtUnid: TEdit;
    MEdtDtCad: TMaskEdit;
    BtnCancelar: TButton;
    ADOQry_Categ: TADOQuery;
    DS_Categ: TDataSource;
    ADOQry_Categcod_categ: TIntegerField;
    ADOQry_Categdesc_categ: TWideStringField;
    ADOQry_Comm: TADOQuery;
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure BtnCancelarClick(Sender: TObject);
    procedure FormShow(Sender: TObject);
    procedure BtnGravarClick(Sender: TObject);
    procedure FormKeyPress(Sender: TObject; var Key: Char);
  private
    { Private declarations }
  public
    { Public declarations }
    procedure LimpaCampos;
  end;

var
  FrmCadProd: TFrmCadProd;

implementation

{$R *.dfm}

uses UFrmProduto;


procedure TFrmCadProd.LimpaCampos;
var i: Integer;
begin
  for i := 0 to Self.ControlCount - 1 do
    if Self.Controls[i] is TEdit then
      (Controls[i] as TEdit).Clear
    else
    if Self.Controls[i] is TComboBox then
      (Controls[i] as TComboBox).ItemIndex := -1
    else
    if Self.Controls[i] is TRadioGroup then
      (Controls[i] as TRadioGroup).ItemIndex := -1
    else
    if Self.Controls[i] is TCheckBox then
      (Controls[i] as TCheckBox).Checked := False
    else
    if Self.Controls[i] is TMaskEdit then
      (Controls[i] as TMaskEdit).Clear
    else
    if Self.Controls[i] is TDBLookupComboBox then
      (Controls[i] as TDBLookupComboBox).KeyValue := null;
end;

procedure TFrmCadProd.BtnCancelarClick(Sender: TObject);
begin
  FrmCadProd.Close;
end;

procedure TFrmCadProd.BtnGravarClick(Sender: TObject);
var comando: String;
begin
  //Validação dos campos
  if Trim(EdtCod.Text) = '' then
  begin
    MessageDlg('Atenção! Campo Código do Produto obrigatório.',TMsgDlgType.mtInformation,[mbOk],0);
    EdtCod.SetFocus;
  end;

  if Trim(EdtDesc.Text) = '' then
  begin
    MessageDlg('Atenção! Campo Descrição do Produto obrigatório.',TMsgDlgType.mtInformation,[mbOk],0);
    EdtDesc.SetFocus;
  end;



  //SQL
  ADOQry_Comm.Close;
  ADOQry_Comm.SQL.Clear;


  if FrmProduto.operacao = 'I' then  //Insert
  begin
    comando := ' INSERT INTO public.cad_produto(codigo, descricao, categoria, '+
               ' fabricante, qtde, unid_med, dt_cad) VALUES (';
    comando := comando + Trim(EdtCod.Text) + ',' ;
    comando := comando +            '''' + Trim(EdtDesc.Text) + ''''+ ',' ;
    comando := comando +            IntToStr(DBLkCmbCateg.KeyValue) + ',' ;
    comando := comando +            '''' + Trim(EdtFabr.Text) + '''' + ',' ;
    comando := comando +            Trim(EdtQtde.Text) + ',' ;
    comando := comando +            '''' + Trim(EdtUnid.Text) + '''' + ',' ;
    comando := comando +            '''' + Trim(MEdtDtCad.Text) + '''' + ');';

      // (1, 'Camiseta preta', 1, 'Zara', 15, 'Unidade', '01-01-2022');

  end else
  if FrmProduto.operacao = 'U' then  //Update
  begin
    comando := '';

  end;
    showmessage('antes add sql');

  ADOQry_Comm.SQL.Add(Comando);
  ADOQry_Comm.ExecSQL;
  ADOQry_Comm.Close;

  FrmProduto.ADOQryProd.Requery();

end;

procedure TFrmCadProd.FormClose(Sender: TObject; var Action: TCloseAction);
begin
  ADOQry_Categ.Active := False;
  FrmProduto.operacao := '';
  FrmCadProd.Free;
end;

procedure TFrmCadProd.FormKeyPress(Sender: TObject; var Key: Char);
begin
  if ((key in ['0'..'9'] = false) and (word(key) <> vk_back)) then
    key := #0;
end;

procedure TFrmCadProd.FormShow(Sender: TObject);
begin
  ADOQry_Categ.Active := True;
end;

end.
